paths:
  /user/signup:
    post:
      summary: Signup a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, age]
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                age:
                  type: number
      responses:
        201:
          description: Signup successful
        409:
          description: User already exists

  /user/login:
    post:
      summary: Login a user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: Login successful
        404:
          description: User not found
        401:
          description: Invalid password

  /user:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        200:
          description: List of all users

  /user/getDetail/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User found
        404:
          description: User not found

  /user/update/{id}:
    put:
      summary: Update user by ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                age:
                  type: number
      responses:
        200:
          description: User updated

  /user/delete/{id}:
    delete:
      summary: Delete user by ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User deleted
